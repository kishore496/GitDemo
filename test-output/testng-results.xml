<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="3" total="13" passed="9" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-02-08T16:23:06 EST" name="Loan Department" finished-at="2023-02-08T16:23:06 EST" duration-ms="217">
    <groups>
      <group name="Smoke">
        <method signature="Day2.Demo3()[pri:0, instance:test.Day2@3e92efc3]" name="Demo3" class="test.Day2"/>
        <method signature="Day4.MobileloginHomeLoan()[pri:0, instance:test.Day4@1622f1b]" name="MobileloginHomeLoan" class="test.Day4"/>
        <method signature="Day3.MobileloginCarLoan()[pri:0, instance:test.Day3@6973b51b]" name="MobileloginCarLoan" class="test.Day3"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2023-02-08T16:23:06 EST" name="Car Loan" finished-at="2023-02-08T16:23:06 EST" duration-ms="212">
      <class name="test.Day1">
        <test-method is-config="true" signature="afsuite()[pri:0, instance:test.Day1@3c419631]" started-at="2023-02-08T16:23:07 EST" name="afsuite" finished-at="2023-02-08T16:23:07 EST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afsuite -->
      </class> <!-- test.Day1 -->
      <class name="test.Day3">
        <test-method is-config="true" signature="bfsuite()[pri:0, instance:test.Day3@6973b51b]" started-at="2023-02-08T16:23:06 EST" name="bfsuite" finished-at="2023-02-08T16:23:06 EST" duration-ms="28" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bfsuite -->
        <test-method is-config="true" signature="beforeclas()[pri:0, instance:test.Day3@6973b51b]" started-at="2023-02-08T16:23:06 EST" name="beforeclas" finished-at="2023-02-08T16:23:06 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeclas -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test.Day3@6973b51b]" started-at="2023-02-08T16:23:06 EST" name="beforeevery" finished-at="2023-02-08T16:23:06 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="MobileSignoutHomeLoan(java.lang.String,java.lang.String)[pri:0, instance:test.Day3@6973b51b]" started-at="2023-02-08T16:23:06 EST" name="MobileSignoutHomeLoan" data-provider="getData" finished-at="2023-02-08T16:23:06 EST" duration-ms="35" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firstpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileSignoutHomeLoan -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test.Day3@6973b51b]" started-at="2023-02-08T16:23:06 EST" name="afterevery" finished-at="2023-02-08T16:23:06 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test.Day3@6973b51b]" started-at="2023-02-08T16:23:06 EST" name="beforeevery" finished-at="2023-02-08T16:23:06 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="MobileSignoutHomeLoan(java.lang.String,java.lang.String)[pri:0, instance:test.Day3@6973b51b]" started-at="2023-02-08T16:23:06 EST" name="MobileSignoutHomeLoan" data-provider="getData" finished-at="2023-02-08T16:23:06 EST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[secondusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secondpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileSignoutHomeLoan -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test.Day3@6973b51b]" started-at="2023-02-08T16:23:06 EST" name="afterevery" finished-at="2023-02-08T16:23:06 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test.Day3@6973b51b]" started-at="2023-02-08T16:23:06 EST" name="beforeevery" finished-at="2023-02-08T16:23:06 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="MobileSignoutHomeLoan(java.lang.String,java.lang.String)[pri:0, instance:test.Day3@6973b51b]" started-at="2023-02-08T16:23:06 EST" name="MobileSignoutHomeLoan" data-provider="getData" finished-at="2023-02-08T16:23:06 EST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[thirdusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[thirdpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileSignoutHomeLoan -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test.Day3@6973b51b]" started-at="2023-02-08T16:23:06 EST" name="afterevery" finished-at="2023-02-08T16:23:06 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test.Day3@6973b51b]" started-at="2023-02-08T16:23:06 EST" name="beforeevery" finished-at="2023-02-08T16:23:06 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="MobileloginCarLoan()[pri:0, instance:test.Day3@6973b51b]" started-at="2023-02-08T16:23:06 EST" name="MobileloginCarLoan" finished-at="2023-02-08T16:23:06 EST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileloginCarLoan -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test.Day3@6973b51b]" started-at="2023-02-08T16:23:06 EST" name="afterevery" finished-at="2023-02-08T16:23:06 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test.Day3@6973b51b]" started-at="2023-02-08T16:23:06 EST" name="beforeevery" finished-at="2023-02-08T16:23:06 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="WebloginCarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.Day3@6973b51b]" started-at="2023-02-08T16:23:06 EST" name="WebloginCarLoan" finished-at="2023-02-08T16:23:06 EST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[CarLoan.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebloginCarLoan -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test.Day3@6973b51b]" started-at="2023-02-08T16:23:06 EST" name="afterevery" finished-at="2023-02-08T16:23:06 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method is-config="true" signature="afterclas()[pri:0, instance:test.Day3@6973b51b]" started-at="2023-02-08T16:23:06 EST" name="afterclas" finished-at="2023-02-08T16:23:06 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterclas -->
      </class> <!-- test.Day3 -->
    </test> <!-- Car Loan -->
    <test started-at="2023-02-08T16:23:06 EST" name="Personal Loan" finished-at="2023-02-08T16:23:06 EST" duration-ms="217">
      <class name="test.Day1">
        <test-method signature="Demo()[pri:0, instance:test.Day1@3c419631]" started-at="2023-02-08T16:23:06 EST" name="Demo" finished-at="2023-02-08T16:23:06 EST" duration-ms="53" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at test.Day1.Demo(Day1.java:18)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:45)
at org.testng.internal.InvokeMethodRunnable.call(InvokeMethodRunnable.java:73)
at org.testng.internal.InvokeMethodRunnable.call(InvokeMethodRunnable.java:11)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1589)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo -->
        <test-method is-config="true" signature="lastexecution()[pri:0, instance:test.Day1@3c419631]" started-at="2023-02-08T16:23:06 EST" name="lastexecution" finished-at="2023-02-08T16:23:06 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastexecution -->
      </class> <!-- test.Day1 -->
      <class name="test.Day2">
        <test-method is-config="true" signature="Prerequestie()[pri:0, instance:test.Day2@3e92efc3]" started-at="2023-02-08T16:23:06 EST" name="Prerequestie" finished-at="2023-02-08T16:23:06 EST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Prerequestie -->
        <test-method signature="Demo3()[pri:0, instance:test.Day2@3e92efc3]" started-at="2023-02-08T16:23:06 EST" name="Demo3" finished-at="2023-02-08T16:23:06 EST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo3 -->
      </class> <!-- test.Day2 -->
      <class name="test.Day4">
        <test-method signature="LoginAPIHomeLoan()[pri:0, instance:test.Day4@1622f1b]" started-at="2023-02-08T16:23:06 EST" name="LoginAPIHomeLoan" finished-at="2023-02-08T16:23:06 EST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginAPIHomeLoan -->
        <test-method signature="MobileloginHomeLoan()[pri:0, instance:test.Day4@1622f1b]" started-at="2023-02-08T16:23:06 EST" name="MobileloginHomeLoan" finished-at="2023-02-08T16:23:06 EST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileloginHomeLoan -->
        <test-method signature="WebloginHomeLoan(java.lang.String)[pri:0, instance:test.Day4@1622f1b]" started-at="2023-02-08T16:23:06 EST" name="WebloginHomeLoan" finished-at="2023-02-08T16:23:06 EST" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PersonalLoan.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebloginHomeLoan -->
      </class> <!-- test.Day4 -->
    </test> <!-- Personal Loan -->
  </suite> <!-- Loan Department -->
</testng-results>
